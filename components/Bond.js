/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import * as THREE  from "three";

export default function Bond({ ...props }) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/bond.glb')
  useFrame(() => (group.current.rotation.x = group.current.rotation.y += 0.01)) 
  const material = new THREE.MeshStandardMaterial({
    color: 0x545454,
    transparent: true,
    opacity: 0.1,
    wireframe: true,
    roughness: 0
  })
  return (
    <group ref={group} {...props} dispose={null} position={[-1, -2, 0]}>
      {/* <mesh scale ={0.03, 0.03, 0.03} geometry={nodes.object_1.geometry} material={materials['/Pearl']} rotation={[Math.PI / 2, 0, 0]} /> */}
      <mesh scale ={0.03, 0.03, 0.03} geometry={nodes.object_1.geometry} material={material} rotation={[Math.PI / 2, 0, 0]} />
      <mesh scale ={0.03, 0.03, 0.03} geometry={nodes.object_2.geometry} material={material} rotation={[Math.PI / 2, 0, 0]} />
      <mesh scale ={0.03, 0.03, 0.03} geometry={nodes.object_3.geometry} material={material} rotation={[Math.PI / 2, 0, 0]} />
    </group>
  )
}

useGLTF.preload('/bond.glb')
