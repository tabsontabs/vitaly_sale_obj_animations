/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import * as THREE  from "three";

export default function Vaurus({ ...props }) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/vaurus.glb')
  useFrame(() => (group.current.rotation.y = group.current.rotation.z += 0.009)) 
  const material = new THREE.MeshStandardMaterial({
    color: 0x545454,
    transparent: true,
    opacity: 0.1,
    wireframe: true,
    roughness: 0
  })
  return (
    <group ref={group} {...props} dispose={null} position={[1, 1.5, 0]}>
      <mesh scale={0.035, 0.035, 0.035} geometry={nodes.object_1.geometry} material={material} rotation={[Math.PI / 2, 0, 0]} />
      <mesh scale={0.035, 0.035, 0.035} geometry={nodes.object_2.geometry} material={material} rotation={[Math.PI / 2, 0, 0]} />
    </group>
  )
}

useGLTF.preload('/vaurus.glb')
